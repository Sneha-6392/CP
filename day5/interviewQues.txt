Q1. What is the difference between JDK and JRE?
->  JDK stands for Java Development Kit. It includes JVM and JRE also used for coding, debugging and compiling.
    It is used to develop java application. Whereas JRE stands for Java Runtime Environment, it includes JVM and
    libraries and it is used only for execution.

Q2. What is Java Virtual Machine (JVM)?
->  The JVM is an abstract computing machine that enables a computer to run a Java program. It is the
    runtime environment for Java bytecode, ensuring that the same code can be executed on any platform 
    that has a compatible JVM.

Q3. What are the different types of memory areas allocated by JVM?
->  Heap - Stores Java objects, arrays
    Method Area/Metaspace - Stores class metadata, static variables
    Stack - Stores method frames, local variables
    PC Register - Tracks current instruction for each thread
    Native Method Stack - Handles native method execution

Q4. What is JIT compiler?
->  Just-In-Time (JIT) Compiler: Improves performance by converting bytecode into native machine code at
    runtime, rather than interpreting the bytecode line-by-line or ahead-of-time. 

Q5. How Java platform is different from other platforms?
->  Java programs are compiled into bytecode which can run on any OS and hardware and since bytecode is platform
    independent so you write once, run anywhere unlike other programming languages.

Q6. Why people say that Java is ‘write once and run anywhere’ language?
->  

Q7. How does ClassLoader work in Java?


Q8. Do you think ‘main’ used for main method is a
keyword in Java?


Q9. Can we write main method as public void
static instead of public static void?